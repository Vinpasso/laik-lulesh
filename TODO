## Steps for Porting LULESH

Port node/element arrays to LAIK (target for dynamic partitioning):

* implement fixed partitioning of reference code as partitioner (TODO: Prio HIGH)
  * similar as bi-section partitioner, but dividing into elem^(1/3) per dim
* convert element/node data into LAIK containers, but keep MPI (TODO: Prio HIGH)
  * subclass to re-route accesses to original stl::vector to LAIK containers
  * one LAIK container per vector (at least as first step)
  * use struct of values, let LAIK decide on the layout (new feature. Prio LOW)
* replace MPI comm for data with laik_switch (TODO: Prio HIGH)
* use another 3d partitioner and check if everything still works (TODO: Prio HIGH)

Other stuff:
* for any global data broadcasted to everybody
  * use LAIK (TODO, Prio LOW)
* for data only at master
  * use LAIK to migrate with master (TODO, Prio LOW)